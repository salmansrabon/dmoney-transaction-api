openapi: 3.0.0
info:
  title: Transaction API
  version: 1.0.0
  description: API for managing transactions and user balances.

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /:
    get:
      summary: Check server status
      responses:
        '200':
          description: Server is up
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Server is up

  /transaction/list:
    get:
      summary: Get list of all transactions
      parameters:
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      responses:
        '200':
          description: Transaction list with count
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transaction list
                  count:
                    type: integer
                    example: 5
                  transactions:
                    type: array
                    items:
                      type: object
        '404':
          description: Transactions not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transaction not found

  /transaction/search/{trnxId}:
    get:
      summary: Search transaction by transaction ID
      parameters:
        - name: trnxId
          in: path
          required: true
          schema:
            type: string
          description: The transaction ID to search for
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      responses:
        '200':
          description: Transaction list with count
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transaction list
                  count:
                    type: integer
                    example: 1
                  transactions:
                    type: array
                    items:
                      type: object
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transaction not found

  /transaction/statement/{account}:
    get:
      summary: Get statement by account
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
          description: The account to get the statement for
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      responses:
        '200':
          description: Transaction list with count
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Transaction list
                  count:
                    type: integer
                    example: 10
                  transactions:
                    type: array
                    items:
                      type: object
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found

  /transaction/limit/{account}:
    get:
      summary: Get user limit by account
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
          description: The account to get the user limit for
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      responses:
        '200':
          description: User limit information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User limit
                  limit:
                    type: number
                    example: 5000
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found

  /transaction/balance/{account}:
    get:
      summary: Get user balance by account
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
          description: The account to get the user balance for
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      responses:
        '200':
          description: User balance information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User balance
                  balance:
                    type: number
                    example: 10000.0
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
  /transaction/deposit:
    post:
      summary: Deposit money to an account.
      description: Allows an authenticated user with the role of "Agent" to deposit money to another account with certain restrictions.
      operationId: deposit
      parameters:
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      requestBody:
        description: Data for depositing money to an account.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from_account
                - to_account
                - amount
              properties:
                from_account:
                  type: string
                  example: "0123456789"
                  description: The phone number of the account making the deposit.
                to_account:
                  type: string
                  example: "0987654321"
                  description: The phone number of the account receiving the deposit.
                amount:
                  type: number
                  example: 500
                  description: The amount to deposit (must be between 10 and 10000).
      responses:
        '201':
          description: Deposit was successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deposit successful
                  trnxId:
                    type: string
                    example: "TXN123456"
                  commission:
                    type: number
                    example: 12.5
                  currentBalance:
                    type: number
                    example: 487.5
        '208':
          description: Non-successful conditions like insufficient balance, account mismatch, or role-based restrictions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Insufficient balance
                  currentBalance:
                    type: number
                    example: 300.0
        '404':
          description: Account not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account does not exist
      tags:
        - Transactions
  /transaction/payment:
    post:
      summary: Process a payment transaction.
      description: Allows an authenticated user (Customer or Agent) to make a payment to a Merchant account with payment fees and commission.
      operationId: payment
      parameters:
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      requestBody:
        description: Payment transaction details.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from_account
                - to_account
                - amount
              properties:
                from_account:
                  type: string
                  example: "0123456789"
                  description: The phone number of the account initiating the payment.
                to_account:
                  type: string
                  example: "0987654321"
                  description: The phone number of the account receiving the payment.
                amount:
                  type: number
                  example: 500
                  description: The amount to be paid (minimum 10 tk).
      responses:
        '201':
          description: Payment was successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Payment successful
                  trnxId:
                    type: string
                    example: "TXN123456"
                  fee:
                    type: number
                    example: 5.0
                  currentBalance:
                    type: number
                    example: 487.5
        '208':
          description: Non-successful conditions like insufficient balance, invalid roles, or mismatched accounts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Insufficient balance
                  currentBalance:
                    type: number
                    example: 300.0
        '404':
          description: Account not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account does not exist
      tags:
        - Transactions

  /transaction/sendmoney:
    post:
      summary: Send money between customer accounts.
      description: Allows an authenticated customer to send money to another customer account, with a P2P fee applied.
      operationId: sendMoney
      parameters:
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      requestBody:
        description: Send money transaction details.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from_account
                - to_account
                - amount
              properties:
                from_account:
                  type: string
                  example: "0123456789"
                  description: The phone number of the account sending the money.
                to_account:
                  type: string
                  example: "0987654321"
                  description: The phone number of the account receiving the money.
                amount:
                  type: number
                  example: 100
                  description: The amount of money to send (minimum 10 tk).
      responses:
        '201':
          description: Money transfer was successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Send money successful
                  trnxId:
                    type: string
                    example: "TXN123456"
                  fee:
                    type: number
                    example: 5.0
                  currentBalance:
                    type: number
                    example: 1500.0
        '208':
          description: Non-successful conditions such as insufficient balance, role restrictions, or same account used for both sender and receiver.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: From account and to account cannot be same
                  currentBalance:
                    type: number
                    example: 900.0
        '404':
          description: One or both accounts do not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: From/To Account does not exist
      tags:
        - Transactions  

  /transaction/withdraw:
    post:
      summary: Withdraw money from customer account via agent.
      description: Allows an authenticated customer to withdraw money through an agent account. Withdrawals incur a fee.
      operationId: withdrawMoney
      parameters:
        - $ref: '#/components/parameters/XAuthSecretKeyParam'
      security:
        - BearerAuth: []
        - XAuthSecretKey: []
      requestBody:
        description: Withdraw money transaction details.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from_account
                - to_account
                - amount
              properties:
                from_account:
                  type: string
                  example: "0123456789"
                  description: The phone number of the customer account.
                to_account:
                  type: string
                  example: "0987654321"
                  description: The phone number of the agent account.
                amount:
                  type: number
                  example: 100
                  description: The amount of money to withdraw (minimum 10 tk).
      responses:
        '201':
          description: Withdrawal was successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Withdraw successful
                  trnxId:
                    type: string
                    example: "TXN123456"
                  fee:
                    type: number
                    example: 5.0
                  currentBalance:
                    type: number
                    example: 1500.0
        '208':
          description: Non-successful conditions such as insufficient balance, minimum amount restrictions, or account role mismatches.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Minimum withdraw amount 10 tk
                  currentBalance:
                    type: number
                    example: 900.0
        '404':
          description: One or both accounts do not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account does not exist
      tags:
        - Transactions          
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    
    XAuthSecretKey:
      type: apiKey
      in: header
      name: X-AUTH-SECRET-KEY

  parameters:
    XAuthSecretKeyParam:
      name: X-AUTH-SECRET-KEY
      in: header
      description: Partner key required for transaction API authentication
      required: true
      schema:
        type: string
