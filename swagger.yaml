openapi: 3.0.0
info:
  title: dmoney API
  description: API for managing dmoney users and transactions
  version: 1.0.0
paths:
  /user:
    get:
      description: Server status endpoint
      responses:
        '200':
          description: Server is up
  /user/login:
    post:
      summary: User login
      description: Endpoint for user authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating successful login
                  token:
                    type: string
                    description: JWT access token for authentication
                  role:
                    type: string
                    description: User role
                  expiresIn:
                    type: string
                    description: Expiration time for the access token
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating incorrect password
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating user not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating an error occurred while processing the request

  /user/list:
    get:
      description: Retrieve a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  count:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/definitions/UserWithBalance'
  /user/search/id/{id}:
    get:
      description: Search user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/definitions/UserWithBalance'
        '404':
          description: User not found
  /user/search/phonenumber/{phone_number}:
    get:
      description: Search user by phone number
      security:
        - bearerAuth: []
      parameters:
        - name: phone_number
          in: path
          description: User phone number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/definitions/UserWithBalance'
        '404':
          description: User not found
  /user/search/email/{email}:
    get:
      description: Search user by email
      security:
        - bearerAuth: []
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/definitions/UserWithBalance'
        '404':
          description: User not found
  /user/search/{role}:
    get:
      description: Search user by role
      security:
        - bearerAuth: []
      parameters:
        - name: role
          in: path
          description: User role
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/definitions/UserWithBalance'

  /transaction/list:
    get:
      summary: Get a list of all transactions
      description: Retrieve a list of all transactions.
      responses:
        '200':
          description: A list of transactions
        '404':
          description: No transactions found
  /upload/{id}:
    post:
      summary: Upload photo for a user
      parameters:
        - $ref: '#/components/parameters/UserIdPathParam'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Photo uploaded successfully
                  photo:
                    type: string
                    description: Filename of the uploaded photo
                    example: user123_photo.jpg
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/UserNotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transaction/search/{trnxId}:
    get:
      summary: Get a transaction by transaction ID
      description: Retrieve a transaction by its transaction ID.
      parameters:
        - in: path
          name: trnxId
          description: ID of the transaction to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The transaction object
        '404':
          description: Transaction not found

  /transaction/statement/{account}:
    get:
      summary: Get a transaction statement by account
      description: Retrieve a transaction statement by account.
      parameters:
        - in: path
          name: account
          description: Account number for which to retrieve the statement
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The transaction statement
        '404':
          description: User not found

  /transaction/limit/{account}:
    get:
      summary: Get the transaction limit for an account
      description: Retrieve the transaction limit for an account.
      parameters:
        - in: path
          name: account
          description: Account number for which to retrieve the limit
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The transaction limit
        '404':
          description: User not found

  /transaction/balance/{account}:
    get:
      summary: Get the balance for an account
      description: Retrieve the balance for an account.
      parameters:
        - in: path
          name: account
          description: Account number for which to retrieve the balance
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The account balance
        '404':
          description: User not found

  /transaction/deposit:
    post:
      summary: Deposit money to an account
      description: Deposit money to an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from_account:
                  type: string
                  description: The account from which to transfer money
                to_account:
                  type: string
                  description: The account to which to transfer money
                amount:
                  type: number
                  description: The amount of money to deposit
              required:
                - from_account
                - to_account
                - amount
      responses:
        '201':
          description: Deposit successful
        '208':
          description: Invalid request or insufficient balance
        '404':
          description: Account does not exist or user role is invalid

  /transaction/payment:
    post:
      summary: Make a payment
      description: Make a payment from one account to another.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from_account:
                  type: string
                  description: The account from which to make the payment
                to_account:
                  type: string
                  description: The account to which to make the payment
                amount:
                  type: number
                  description: The amount of money to transfer
              required:
                - from_account
                - to_account
                - amount
      responses:
        '201':
          description: Payment successful
        '208':
          description: Invalid request or insufficient balance
        '404':
          description: Account does not exist or user role is invalid
  /transaction/sendmoney:
    post:
      summary: Send money from one account to another
      description: Send money from one account to another.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from_account:
                  type: string
                  description: The account from which to send money
                to_account:
                  type: string
                  description: The account to which to send money
                amount:
                  type: number
                  description: The amount of money to send
              required:
                - from_account
                - to_account
                - amount
      responses:
        '201':
          description: Send money successful
        '208':
          description: Invalid request or insufficient balance
        '404':
          description: From/To Account does not exist
  /transaction/withdraw:
    post:
      summary: Withdraw money from an account
      description: Withdraw money from an account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from_account:
                  type: string
                  description: The account from which to withdraw money
                to_account:
                  type: string
                  description: The account to which to deposit the withdrawn money
                amount:
                  type: number
                  description: The amount of money to withdraw
              required:
                - from_account
                - to_account
                - amount
      responses:
        '201':
          description: Withdraw successful
        '208':
          description: Invalid request or insufficient balance
        '404':
          description: Account does not exist or user role is invalid

